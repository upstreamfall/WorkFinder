package org.wut.impl;

import org.wut.*;

import java.util.Collection;

import org.protege.owl.codegeneration.WrappedIndividual;
import org.protege.owl.codegeneration.impl.WrappedIndividualImpl;

import org.protege.owl.codegeneration.inference.CodeGenerationInference;

import org.semanticweb.owlapi.model.IRI;
import org.semanticweb.owlapi.model.OWLOntology;


/**
 * Generated by Protege (http://protege.stanford.edu).<br>
 * Source Class: DefaultPerson <br>
 * @version generated on Thu May 21 22:15:53 CEST 2015 by Pawel
 */
public class DefaultPerson extends WrappedIndividualImpl implements Person {

    public DefaultPerson(CodeGenerationInference inference, IRI iri) {
        super(inference, iri);
    }





    /* ***************************************************
     * Object Property http://www.semanticweb.org/pawel/ontologies/workfinder#hasAuxSkill
     */
     
    public Collection<? extends AuxSkill> getHasAuxSkill() {
        return getDelegate().getPropertyValues(getOwlIndividual(),
                                               Vocabulary.OBJECT_PROPERTY_HASAUXSKILL,
                                               DefaultAuxSkill.class);
    }

    public boolean hasHasAuxSkill() {
	   return !getHasAuxSkill().isEmpty();
    }

    public void addHasAuxSkill(AuxSkill newHasAuxSkill) {
        getDelegate().addPropertyValue(getOwlIndividual(),
                                       Vocabulary.OBJECT_PROPERTY_HASAUXSKILL,
                                       newHasAuxSkill);
    }

    public void removeHasAuxSkill(AuxSkill oldHasAuxSkill) {
        getDelegate().removePropertyValue(getOwlIndividual(),
                                          Vocabulary.OBJECT_PROPERTY_HASAUXSKILL,
                                          oldHasAuxSkill);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/pawel/ontologies/workfinder#hasDescription
     */
     
    public Collection<? extends String> getHasDescription() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASDESCRIPTION, String.class);
    }

    public boolean hasHasDescription() {
		return !getHasDescription().isEmpty();
    }

    public void addHasDescription(String newHasDescription) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASDESCRIPTION, newHasDescription);
    }

    public void removeHasDescription(String oldHasDescription) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASDESCRIPTION, oldHasDescription);
    }


    /* ***************************************************
     * Data Property http://www.semanticweb.org/pawel/ontologies/workfinder#hasEmail
     */
     
    public Collection<? extends String> getHasEmail() {
		return getDelegate().getPropertyValues(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASEMAIL, String.class);
    }

    public boolean hasHasEmail() {
		return !getHasEmail().isEmpty();
    }

    public void addHasEmail(String newHasEmail) {
	    getDelegate().addPropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASEMAIL, newHasEmail);
    }

    public void removeHasEmail(String oldHasEmail) {
		getDelegate().removePropertyValue(getOwlIndividual(), Vocabulary.DATA_PROPERTY_HASEMAIL, oldHasEmail);
    }


}
